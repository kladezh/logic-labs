{-
1.Функция принимает две кортежа (x1, y1, r1) и (x2, y2, r2), представляющие центр и радиус двух окружностей соответственно.

2.Для того чтобы узнать, содержится ли вторая окружность полностью внутри первой, вычисляется расстояние между их центрами.

3.После вычисления расстояния между центрами окружностей, проверяется, находится ли центр второй окружности внутри первой, с учетом их радиусов. Если расстояние между центрами меньше
или равно разнице их радиусов, то вторая окружность полностью содержится внутри первой.

distance - это расстояние между центрами двух окружностей, которое вычисляется как расстояние между точками (x1, y1) и (x2, y2) по формуле расстояния между двумя точками в декартовой 
системе координат.
r1 и r2 - это радиусы первой и второй окружностей соответственно.

Таким образом, выражение distance <= r1 - r2 означает, что если расстояние между центрами окружностей меньше или равно разнице их радиусов, то вторая окружность полностью содержится 
внутри первой.
-}


isIncluded :: (Double, Double, Double) -> (Double, Double, Double) -> Bool
isIncluded (x1, y1, r1) (x2, y2, r2) = 
    distance <= r1 - r2
    where
        distance = sqrt ((x2 - x1)^2 + (y2 - y1)^2)

-- Пример использования:
main = do
    print (isIncluded (0, 0, 5) (2, 2, 3))   -- Вывод: False (вторая окружность не целиком содержится в первой)
    print (isIncluded (0, 0, 5) (0, 0, 4))   -- Вывод: True  (вторая окружность целиком содержится в первой)
    print (isIncluded (0, 0, 5) (3, 3, 1))   -- Вывод: False (вторая окружность не целиком содержится в первой)




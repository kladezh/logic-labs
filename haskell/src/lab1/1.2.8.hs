{-
    Вычисление квадратов длин сторон: Сначала вычисляются квадраты длин сторон треугольника. Это делается с использованием функции distanceSquared, которая вычисляет квадрат расстояния 
между двумя точками на плоскости. Для трех пар точек (x1, y1), (x2, y2) и (x3, y3) находятся квадраты длин сторон a, b и c.

    Проверка теоремы Пифагора: Затем проверяется, существует ли такой треугольник, у которого квадрат одной из сторон равен сумме квадратов двух других сторон. Это суть теоремы Пифагора, 
которая утверждает, что в прямоугольном треугольнике квадрат длины гипотенузы равен сумме квадратов длин катетов.

    Проверка всех комбинаций сторон: Функция isRectangular проверяет три возможных комбинации сторон: (a, b, c), (b, a, c) и (c, a, b). Если хотя бы одна из этих комбинаций удовлетворяет 
теореме Пифагора, то функция возвращает True, что означает, что треугольник прямоугольный. В противном случае она возвращает False.
-}


isRectangular :: (Double, Double) -> (Double, Double) -> (Double, Double) -> Bool
isRectangular (x1, y1) (x2, y2) (x3, y3) =
    let a = distanceSquared (x1, y1) (x2, y2)
        b = distanceSquared (x1, y1) (x3, y3)
        c = distanceSquared (x2, y2) (x3, y3)
    in isPythagorean a b c || isPythagorean b a c || isPythagorean c a b
    where
        distanceSquared (x1, y1) (x2, y2) = (x2 - x1)^2 + (y2 - y1)^2
        isPythagorean a b c = a + b == c || a + c == b || b + c == a

-- Пример использования:
main = do
    print (isRectangular (0, 0) (0, 3) (4, 0))  -- Вывод: True (треугольник прямоугольный)
    print (isRectangular (0, 0) (0, 4) (5, 1))  -- Вывод: False (треугольник не прямоугольный)

